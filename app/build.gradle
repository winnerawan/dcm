apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "id.co.next_innovation.leaseapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }

    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"http://api.nosleep.id/dcm/\"")
        }
        release {
            minifyEnabled true
            buildConfigField("String", "BASE_URL", "\"http://api.nosleep.id/dcm/\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources true
            zipAlignEnabled true
            pseudoLocalesEnabled true
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation("com.mikepenz:materialdrawer:6.0.1@aar") {
        transitive = true
    }
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile "com.android.support:design:$rootProject.supportLibraryVersion"

    compile "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2FastAndroidNetworking"
    // image
    // parser
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"
    compile "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    // database
    compile "org.greenrobot:greendao:$rootProject.greenDaoVersion"

    // dependency injection
    compile "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // reactive
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    // code generator for view
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"
    // logger
    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // UI Testing
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    compile 'javax.inject:javax.inject:1'
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'com.wang.avi:library:2.1.3'
    compile 'com.github.bluejamesbond:textjustify-android:2.1.6'
    compile 'agency.tango.android:avatar-view:0.0.2'

    //if you want to use Picasso for loading images
    compile 'agency.tango.android:avatar-view-picasso:0.0.2'
    compile 'com.astuetz:pagerslidingtabstrip:1.0.1'

    //if you want to use Glide for loading images
    compile 'agency.tango.android:avatar-view-glide:0.0.2'
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    compile "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
//    //compile 'com.github.clans:fab:1.6.4'
//    compile 'com.ogaclejapan.smarttablayout:library:1.6.1@aar'
//    compile 'com.ogaclejapan.smarttablayout:utils-v4:1.6.1@aar'
    compile 'com.jaredrummler:material-spinner:1.2.2'

    compile 'noman.weekcalendar:weekcalendar:1.0.6'
    //Optional: see how to use the utility.
    //compile 'com.ogaclejapan.smarttablayout:utils-v13:1.6.1@aar'

}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
}
